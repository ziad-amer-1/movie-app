{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MovieListing/MovieListing.js","common/apis/movieApi.js","common/apis/MovieApiKey.js","features/movies/movieSlice.js","components/Home/Home.js","images/user.png","components/Header/Header.js","components/Footer/Footer.js","components/PageNotFound/PageNotFound.js","components/Loading/Loading.jsx","components/MovieDetail/MovieDetail.js","App.js","features/store.js","index.js"],"names":["MovieCard","data","console","log","className","to","imdbID","src","Poster","alt","title","Title","Year","MovieListing","renderMovies","renderShows","settings","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","responsive","breakpoint","movies","useSelector","state","shows","Response","Search","map","movie","index","error","style","marginBlock","textAlign","axios","create","baseURL","APIKey","fetchAsyncMovies","createAsyncThunk","term","a","movieApi","get","response","fetchAsyncShows","fetchAsyncMovieOrShowBasedOnId","id","movieSlice","createSlice","name","initialState","selectMovieOrShow","reducers","removeSelectedMovieOrShow","extraReducers","pending","fulfilled","payload","rejected","actions","Home","dispatch","useDispatch","useEffect","Header","useState","setTerm","textDecoration","color","action","onSubmit","e","preventDefault","alert","test","type","value","placeholder","onChange","target","userImage","Footer","PageNotFound","navigate","useNavigate","setTimeout","Loading","MovieDetail","useParams","dataBasedOnURL","Object","keys","length","imdbRating","imdbVotes","Runtime","Plot","Director","Actors","Genre","Language","Awards","App","path","exact","element","store","configureStore","reducer","moviesReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20d0f0a9.chunk.js","sourcesContent":["import React from \"react\"\r\nimport \"./MovieCard.scss\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nfunction MovieCard({ data }) {\r\n  console.log(data)\r\n  return (\r\n    <div className=\"card-item\">\r\n      <Link to={`/movie/${data.imdbID}`}>\r\n        <div className=\"card-inner\">\r\n          <div className=\"card-top\">\r\n            <img src={data.Poster} alt={data.title} />\r\n          </div>\r\n          <div className=\"card-bottom\">\r\n            <div className=\"card-info\">\r\n              <h4>{data.Title}</h4>\r\n              <p>{data.Year}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieCard\r\n","import React from 'react'\r\nimport Slider from 'react-slick'\r\nimport './MovieListing.scss'\r\nimport { useSelector } from 'react-redux'\r\nimport MovieCard from '../../components/MovieCard/MovieCard'\r\n\r\nfunction MovieListing() {\r\n  \r\n  const settings = {\r\n    dots: true,\r\n    infinite: false,\r\n    speed: 500,\r\n    slidesToShow: 6,\r\n    slidesToScroll: 3,\r\n    initialSlide: 0,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1024,\r\n        settings: {\r\n          slidesToShow: 3,\r\n          slidesToScroll: 3,\r\n          infinite: true,\r\n          dots: true\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 2,\r\n          initialSlide: 2\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 480,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1\r\n        }\r\n      }\r\n    ]\r\n  }\r\n  \r\n  const movies = useSelector(state => state.movies.movies)\r\n  const shows = useSelector(state => state.movies.shows)\r\n  \r\n  let renderMovies = '', renderShows = '' \r\n\r\n  renderMovies =\r\n    movies.Response === 'True' ?\r\n    (\r\n      movies.Search.map((movie, index) => (\r\n        <MovieCard key={index} data={ movie } />\r\n      ))\r\n    ) :\r\n    (\r\n      <div\r\n        className=\"movies-error\">\r\n        {movies.error}\r\n      </div >\r\n      )\r\n  \r\n  renderShows =\r\n    shows.Response === 'True' ?\r\n    (\r\n      shows.Search.map((movie, index) => (\r\n        <MovieCard key={index} data={ movie } />\r\n      ))\r\n    ) :\r\n    (\r\n      <div\r\n        className=\"movies-error\">\r\n        {shows.error}\r\n      </div >\r\n    )\r\n\r\n  \r\n  return (\r\n    <div className=\"mvoie-wrapper\">\r\n      <div className=\"movie-list\">\r\n        <h2 style={{ marginBlock: '50px', textAlign: 'center' }}>Movies</h2>\r\n        <div className=\"movies-container\">\r\n          <Slider {...settings}>{renderMovies}</Slider>\r\n        </div>\r\n      </div>\r\n      <div className=\"show-list\">\r\n        <h2 style={{ marginBlock: '50px', textAlign: 'center' }}>Shows</h2>\r\n        <div className=\"shows-container\">\r\n          <Slider {...settings}>{renderShows}</Slider>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MovieListing","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://www.omdbapi.com\",\r\n});\r\n","export const APIKey = 'f1d8523b';\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport movieApi from \"../../common/apis/movieApi\";\r\nimport { APIKey } from \"../../common/apis/MovieApiKey\";\r\n\r\nexport const fetchAsyncMovies = createAsyncThunk(\r\n  \"movies/fetchAsyncMovies\",\r\n  async (term) => {\r\n    const response = await movieApi.get(\r\n      `?apiKey=${APIKey}&s=${term}&type=movie`\r\n    );\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const fetchAsyncShows = createAsyncThunk(\r\n  \"movies/fetchAsyncShows\",\r\n  \r\n  async (term) => {\r\n    const response = await movieApi.get(\r\n      `?apiKey=${APIKey}&s=${term}&type=series`\r\n    );\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const fetchAsyncMovieOrShowBasedOnId = createAsyncThunk(\r\n  \"movies/fetchAsyncMovieOrShowBasedOnId\",\r\n  async (id) => {\r\n    const response = await movieApi.get(`?apiKey=${APIKey}&i=${id}&Plot=full`);\r\n    return response.data;\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  movies: {},\r\n  shows: {},\r\n  selectMovieOrShow: {},\r\n};\r\n\r\nconst movieSlice = createSlice({\r\n  name: \"movies\",\r\n  initialState,\r\n  reducers: {\r\n    removeSelectedMovieOrShow: (state) => {\r\n      state.selectMovieOrShow = {};\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [fetchAsyncMovies.pending]: () => {\r\n      console.log(\"Pending\");\r\n    },\r\n    [fetchAsyncMovies.fulfilled]: (state, { payload }) => {\r\n      console.log(\"Fetched Successfully!\");\r\n      return { ...state, movies: payload };\r\n    },\r\n    [fetchAsyncMovies.rejected]: () => {\r\n      console.log(\"Rejected!\");\r\n    },\r\n    [fetchAsyncShows.fulfilled]: (state, { payload }) => {\r\n      console.log(\"Fetched Successfully!\");\r\n      return { ...state, shows: payload };\r\n    },\r\n    [fetchAsyncMovieOrShowBasedOnId.fulfilled]: (state, { payload }) => {\r\n      console.log(\"Fetched Successfully!\");\r\n      return { ...state, selectMovieOrShow: payload };\r\n    },\r\n  },\r\n});\r\n\r\nexport const { removeSelectedMovieOrShow } = movieSlice.actions;\r\nexport default movieSlice.reducer;\r\n","import React, { useEffect } from 'react'\r\nimport MovieListing from '../MovieListing/MovieListing'\r\nimport './Home.scss'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchAsyncMovies, fetchAsyncShows } from '../../features/movies/movieSlice'\r\n\r\n\r\nfunction Home() {\r\n  \r\n  const dispatch = useDispatch()\r\n  \r\n  const movieText = 'Harry'\r\n  const showText = 'Friends'\r\n  \r\n  useEffect(() => { \r\n    dispatch(fetchAsyncMovies(movieText))\r\n    dispatch(fetchAsyncShows(showText))\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"banner-image\"></div>\r\n      <MovieListing />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home","export default __webpack_public_path__ + \"static/media/user.109eb920.png\";","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport userImage from '../../images/user.png'\r\nimport { FcSearch } from 'react-icons/fc'\r\nimport './Header.scss'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchAsyncMovies, fetchAsyncShows } from '../../features/movies/movieSlice'\r\n\r\nfunction Header() {\r\n  \r\n  const [term, setTerm] = useState('')\r\n  const dispatch = useDispatch()\r\n  \r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n    if (term === '') alert('Please Enter a Valid Search')\r\n    if(!term || /^\\s*$/.test(term)) return\r\n    // console.log(term)\r\n    dispatch(fetchAsyncMovies(term))\r\n    dispatch(fetchAsyncShows(term))\r\n    setTerm('')\r\n  }\r\n  \r\n  return (\r\n    <header>\r\n      <div className=\"logo\">\r\n        <Link to='/movie-app' style={{ textDecoration: 'none', color: 'white' }}>\r\n          Movie App\r\n        </Link>\r\n      </div>\r\n      \r\n      <div className=\"search-bar\">\r\n        <form action=\"\" onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            value={ term }\r\n            placeholder='Search Movies Or Shows'\r\n            onChange={(e) => setTerm(e.target.value)}\r\n          />\r\n          <button type='submit'><FcSearch /></button>\r\n        </form>\r\n      </div>\r\n      \r\n      <div className=\"user-image\">\r\n        <img src={ userImage } alt='user img' />\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header","import React from \"react\";\r\nimport \"./Footer.scss\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div>Movie App</div>\r\n      <div>©2021, Movie, Inc. or its affiliates</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport './PageNotFound.scss'\r\n\r\nconst PageNotFound = () => {\r\n  const navigate = useNavigate()\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      navigate(\"/movie-app\")\r\n    }, 100)\r\n  }, [])\r\n  return <div className=\"pageNotFound\">PageNotFound</div>;\r\n};\r\n\r\nexport default PageNotFound;\r\n","import React from 'react'\r\nimport './Loading.scss'\r\n\r\nfunction Loading() {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <span>Loading</span>\r\n      <div className=\"spinner-sector spinner-sector-red\"></div>\r\n      <div className=\"spinner-sector spinner-sector-blue\"></div>\r\n      <div className=\"spinner-sector spinner-sector-green\"></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loading","import React, { useEffect } from \"react\";\r\nimport \"./MovieDetail.scss\";\r\nimport { useParams } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  fetchAsyncMovieOrShowBasedOnId,\r\n  removeSelectedMovieOrShow,\r\n} from \"../../features/movies/movieSlice\";\r\nimport { VscStarEmpty } from \"react-icons/vsc\";\r\nimport { FaThumbsUp } from \"react-icons/fa\";\r\nimport { FaFilm } from \"react-icons/fa\";\r\nimport { BsFillCalendarCheckFill } from \"react-icons/bs\";\r\nimport Loading from \"../../components/Loading/Loading\";\r\n\r\nfunction MovieDetail() {\r\n  const { imdbID } = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  const dataBasedOnURL = useSelector(\r\n    (state) => state.movies.selectMovieOrShow\r\n  );\r\n\r\n  // console.log(dataBasedOnURL)\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchAsyncMovieOrShowBasedOnId(imdbID));\r\n    return () => {\r\n      dispatch(removeSelectedMovieOrShow());\r\n    };\r\n  }, [dispatch, imdbID]);\r\n\r\n  return (\r\n    <>\r\n      {\r\n        !Object.keys(dataBasedOnURL).length ?\r\n          (\r\n            <Loading />\r\n          )\r\n          :\r\n          (\r\n          <div className=\"movie-section\">\r\n            <div className=\"section-left\">\r\n              <div className=\"movie-title\">{dataBasedOnURL.Title}</div>\r\n              <div className=\"movie-rating\">\r\n                <span>\r\n                  IMDV Rating <VscStarEmpty color=\"#ff9e00\" /> :{\" \"}\r\n                  {dataBasedOnURL.imdbRating}\r\n                </span>\r\n              </div>\r\n              <div className=\"movie-rating\">\r\n                <span>\r\n                  IMDV Votes <FaThumbsUp color=\"#fafafa\" /> :{\" \"}\r\n                  {dataBasedOnURL.imdbVotes}\r\n                </span>\r\n              </div>\r\n              <div className=\"movie-rating\">\r\n                <span>\r\n                  IMDV Runtime <FaFilm color=\"rgb(191 213 214)\" /> :{\" \"}\r\n                  {dataBasedOnURL.Runtime}\r\n                </span>\r\n              </div>\r\n              <div className=\"movie-rating\">\r\n                <span>\r\n                  IMDV Year <BsFillCalendarCheckFill color=\"peachpuff\" /> :{\" \"}\r\n                  {dataBasedOnURL.Year}\r\n                </span>\r\n              </div>\r\n              <div className=\"movie-plot\">{dataBasedOnURL.Plot}</div>\r\n              <div className=\"movie-info\">\r\n                <div>\r\n                  <span>Director</span>\r\n                  <span>{dataBasedOnURL.Director}</span>\r\n                </div>\r\n                <div>\r\n                  <span>Stars</span>\r\n                  <span>{dataBasedOnURL.Actors}</span>\r\n                </div>\r\n                <div>\r\n                  <span>Genres</span>\r\n                  <span>{dataBasedOnURL.Genre}</span>\r\n                </div>\r\n                <div>\r\n                  <span>Languages</span>\r\n                  <span>{dataBasedOnURL.Language}</span>\r\n                </div>\r\n                <div>\r\n                  <span>Awards</span>\r\n                  <span>{dataBasedOnURL.Awards}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"section-right\">\r\n              <img src={dataBasedOnURL.Poster} alt={dataBasedOnURL.title} />\r\n            </div>\r\n          </div>\r\n          )\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MovieDetail;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport Home from \"./components/Home/Home\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport PageNotFound from \"./components/PageNotFound/PageNotFound\";\r\nimport MovieDetail from \"./components/MovieDetail/MovieDetail\";\r\nimport \"./App.scss\";\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        <Header></Header>\r\n        <div className=\"container\">\r\n          <Routes>\r\n            <Route path=\"/movie-app\" exact element={<Home />} />\r\n            <Route path=\"/movie/:imdbID\" element={<MovieDetail />} />\r\n            <Route path='*' element={<PageNotFound />} />\r\n          </Routes>\r\n        </div>\r\n        <Footer />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport moviesReducer from \"./movies/movieSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    movies: moviesReducer,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport { store } from \"./features/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}